name: Build EXE on PR

on:
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Create dist directory if it doesn't exist
      run: |
        if (-not (Test-Path -Path dist)) {
          New-Item -ItemType Directory -Path dist
        }

    - name: List dist directory contents before build
      run: |
        echo "Listing contents of dist directory before build:"
        dir dist

    - name: Build EXE
      run: |
        echo "Running pyinstaller to build the executable..."
        pyinstaller --clean FileOrganizer.spec
        echo "pyinstaller build completed."

    - name: List dist directory contents after build
      run: |
        echo "Listing contents of dist directory after build:"
        dir dist

    - name: Zip the package
      run: |
        echo "Checking if FileOrganizer.exe exists..."
        if (Test-Path dist\FileOrganizer.exe) {
          echo "FileOrganizer.exe found. Creating ZIP archive..."
          Compress-Archive -Path dist\FileOrganizer.exe -DestinationPath dist\FileOrganizer.zip
          echo "ZIP archive created."
        } else {
          Write-Error "FileOrganizer.exe not found in dist directory"

    - name: Upload ZIP
      uses: actions/upload-artifact@v4
      with:
        name: FileOrganizer
        path: dist\FileOrganizer.zip
        retention-days: 1  # Automatically delete the artifact after 1 day

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Delete old artifacts
      run: |
        gh api -X DELETE /repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.expired == true) | .id' | xargs -I {} gh api -X DELETE /repos/${{ github.repository }}/actions/artifacts/{}
