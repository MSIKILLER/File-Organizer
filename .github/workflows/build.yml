name: Build EXE on PR

on:
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        # Try to install requirements if file exists
        if (Test-Path requirements.txt) {
          pip install -r requirements.txt
        }

    - name: Build EXE
      run: |
        echo "Running pyinstaller to build the executable..."
        # Show current directory and contents
        echo "Current working directory:"
        pwd
        echo "Directory contents:"
        dir
        # Run PyInstaller with the spec file
        pyinstaller --clean --log-level DEBUG FileOrganizer.spec
        echo "pyinstaller build completed."

    - name: List dist directory contents
      run: |
        echo "Listing contents of dist directory:"
        if (Test-Path dist) {
          Get-ChildItem -Path dist -Recurse | Format-Table Name, Length, LastWriteTime
        } else {
          echo "dist directory not found"
        }

    - name: Zip the package
      run: |
        echo "Checking if FileOrganizer.exe exists..."
        $exePath = Get-ChildItem -Path dist -Recurse -Filter FileOrganizer.exe | 
                  Select-Object -First 1 -ExpandProperty FullName
        if ($exePath) {
          echo "FileOrganizer.exe found at: $exePath"
          $distPath = Split-Path -Parent $exePath
          Compress-Archive -Path "$distPath\*" -DestinationPath "FileOrganizer.zip" -Force
          echo "ZIP archive created."
        } else {
          Write-Error "FileOrganizer.exe not found in dist directory"
          exit 1

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: FileOrganizer
        path: FileOrganizer.zip
        retention-days: 1

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Delete old artifacts
      run: |
       gh api -X DELETE /repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.expired == true) | .id' | xargs -I {} gh api -X DELETE /repos/${{ github.repository }}/actions/artifacts/{}